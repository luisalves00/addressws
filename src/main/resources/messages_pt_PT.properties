# ==============================================================================
# Main Messages
# ==============================================================================

default.page.title=Webservice de Moradas Portuguesas
project.welcome.title=Bem-vindo ao projeto AddressWS
project.welcome.description=Este projeto tem como objetivo disponibilizar os códigos postais e moradas, através de jax-rs com suporte de full text search (lucene).

# ==============================================================================
# Menu
# ==============================================================================

page.top.title=Topo
page.examples.title=Exemplos
page.api.info.title=Informação sobre a API
page.contact.title=Contactos
page.social.title=Social

# ==============================================================================
# Language Selector
# ==============================================================================

page.language.selector.pt=Português
page.language.selector.en=Inglês

# ==============================================================================
# Main Page Content
# ==============================================================================

page.examples.title.detail=Selecione um dos exemplos disponibilizados

page.api.info.title.detail=Aprenda tudo sobre a API REST
page.api.info.table.header.method=Método
page.api.info.table.header.url=URL
page.api.info.table.header.produces=Produz
page.api.info.table.header.action=Ação
json.and.xml=JSON/XML

page.api.info.title.distrito=Distrito API
page.api.info.table.body.get.all.distritos=obter todos os Distritos
page.api.info.table.body.get.distrito.by.id=obter um Distrito pelo seu identificador, este tem de fazer match com a express\u00E3o regular\: \\\\d{2}
page.api.info.table.body.get.distrito.by.name=obter uma lista de Distritos pelo seu nome, este tem de fazer match com a expressão regular: [A-Za-z ÁÂÀÃáâàãÊÈÉêèéÍÎÌíîìÓÔÒÕóôòõÚÛÙúûùÇç)(-]*

page.api.info.title.concelho=Concelho API
page.api.info.table.body.get.all.concelhos=obter todos os Concelhos
page.api.info.table.body.get.concelho.by.id=obter um Concelho pelo seu identificador, que \u00E9 constituido pelo identificador do distrito e o identificador do concelho. Ambos tem de fazer match com a express\u00E3o regular\: \\\\d{2}
page.api.info.table.body.get.concelho.by.name=obter uma lista de Concelhos pelo seu nome, este tem de fazer match com a expressão regular: [A-Za-z ÁÂÀÃáâàãÊÈÉêèéÍÎÌíîìÓÔÒÕóôòõÚÛÙúûùÇç)(-]*

# ==============================================================================
# TechnicalInfo
# ==============================================================================
technical.info.version=Versão
technical.info.version.got=Git-CommitId
technical.info.build.time=Build time

# ==============================================================================
# Global Error
# ==============================================================================

project.missing.content=Ups, falta algum conteúdo.
project.missing.content.detail=Por favor informe o administrador do site.

# ==============================================================================
# Admin Area
# ==============================================================================

admin.csv.file.header=Carregar Ficheiro de Dados
admin.csv.file.upload.success=O ficheiro {0} foi carregado com sucesso.
admin.csv.file.upload.error=Ocorreu um erro inesperado ao carregar o ficheiro. Por favor tente novamente.
admin.csv.file.type.error=O conteudo do ficheiro não é conhecido. Não foi possível ler o seu conteúdo.
admin.csv.file.execute=Processar o Ficheiro
admin.csv.file.type.selected=O ficheiro atual é do tipo '{0}'.
admin.csv.file.type.selected.district=Distrito
admin.csv.file.type.selected.county=Concelho
admin.csv.file.type.selected.all.zip.code=Todos os Códigos Postais
#admin.csv.file.concelhos.execute=Concelhos
#admin.csv.file.all.zip.code.execute=Todos os Códigos Postais 

# ==============================================================================
# Component Errors
# ==============================================================================
javax.faces.component.UIInput.CONVERSION={0}: Ocorreu um erro de conversão.
javax.faces.component.UIInput.REQUIRED={0}: O campo é de preenchimento obrigatório.
javax.faces.component.UIInput.UPDATE={0}: Ocorreu um erro ao processar a informação submetida.
javax.faces.component.UISelectOne.INVALID={0}: O valor introduzido não é válido.
javax.faces.component.UISelectMany.INVALID={0}: O valor introduzido não é válido.

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}'' tem de ser um núamero decimal com sinal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}\: ''{0}'' tem de ser um n\u00FAamero decimal com sinal, constitu\u00EDdo por zero ou mais digito, que podem ser seguidos de um ponto de fra\u00E7\u00E3o decimal. Exemplo\: {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito. Exemplo: {1}
javax.faces.converter.BooleanConverter.BOOLEAN={1}: ''{0}'' tem de ser 'verdadeiro' ou 'falso'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}\: ''{0}'' tem de ser 'verdadeiro' ou 'falso'. Outro valor que n\u00E3o seja verdadeiro ser\u00E1 considerado como 'falso'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}'' tem de ser um núamero entre 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}: ''{0}'' tem de ser um núamero entre 0 e 255.  Exemplo: {1}
javax.faces.converter.CharacterConverter.CHARACTER={1}\:  '{0}'' tem de ser um car\u00E1ter v\u00E1lido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}\: ''{0}'' tem de ser um car\u00E1ter ASCII v\u00E1lido.
javax.faces.converter.DateTimeConverter.DATE={2}\: ''{0}'' n\u00E3o \u00E9 uma data v\u00E1lida.
javax.faces.converter.DateTimeConverter.DATE_detail={2}\: ''{0}'' n\u00E3o \u00E9 uma data v\u00E1lida. Exemplo\: {1}
javax.faces.converter.DateTimeConverter.TIME={2}\: ''{0}'' n\u00E3o \u00E9 uma hora v\u00E1lida.
javax.faces.converter.DateTimeConverter.TIME_detail={2}\: ''{0}'' n\u00E3o \u00E9 uma hora v\u00E1lida. Exemplo\: {1}
javax.faces.converter.DateTimeConverter.DATETIME={2}\: ''{0}'' n\u00E3o \u00E9 uma data/hora v\u00E1lida.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}\: ''{0}'' n\u00E3o \u00E9 uma data/hora v\u00E1lida. Exemplo\: {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: Um 'padrão' ou 'tipo' tem de ser especificados para converter o valor ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}: ''{0}'' tem de ser um núamero entre 4.9E-324 e 1.7976931348623157E308  Exemplo: {1}
javax.faces.converter.EnumConverter.ENUM={2}\: ''{0}'' tem de ser um valor poss\u00EDvel de converter para uma enumera\u00E7\u00E3o.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}'' must be convertible to an enum from the enum that contains the constant  ''{1}'' .
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}'' must be convertible to an enum from the enum, but no enum class provided.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}'' must be convertible to an enum from the enum, but no enum class provided.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}'' tem de ser um núamero 1.4E-45 e 3.4028235E38  Exemplo: {1}
#javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
#javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}'' tem de ser um núamero entre -2147483648 ae 2147483647 Exemplo: {1}
#javax.faces.converter.LongConverter.LONG={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
#javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}'' tem de ser um núamero de -9223372036854775808 a 9223372036854775807 Exemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}\: Valor inv\u00E1lido.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}\: Valor inv\u00E1lido.
javax.faces.converter.LongConverter.LONG={2}\: Valor inv\u00E1lido.
javax.faces.converter.LongConverter.LONG_detail={2}\: Valor inv\u00E1lido.
javax.faces.converter.NumberConverter.CURRENCY={2}\: ''{0}'' n\u00E3o pode ser interpretado como um valor monet\u00E1rio.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}\: ''{0}'' n\u00E3o pode ser interpretado como um valor monet\u00E1rio. Exemplo\: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: ''{0}'' não pode ser interpretado como uma percentagem.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: ''{0}'' não pode ser interpretado como uma percentagem. Exemplo: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' não é um núamero.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' não é um núamero. Exemplo: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' não é um padrão.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' não é um padrão. Exemplo: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}'' tem de ser um núamero, constituido por um ou mais digito.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}'' tem de ser um núamero entre -32768 e 32767 Exemplo: {1}
javax.faces.converter.STRING={1}\: N\u00E3o \u00E9 poss\u00EDvel converter ''{0}'' para texto.


# ==============================================================================
# Validator Errors
# ==============================================================================
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}\: O limite m\u00E1ximo de ''{0}'' foi excedido
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}\: Valor inferior ao limite m\u00EDnimo ''{0}''.
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}: Valores permitidos entre {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: O valor não é do tipo correto.
javax.faces.validator.LengthValidator.MAXIMUM={1}\: O limite m\u00E1ximo de ''{0}'' foi excedido
javax.faces.validator.LengthValidator.MINIMUM={1}\: Valor inferior ao limite m\u00EDnimo ''{0}''.
javax.faces.validator.LongRangeValidator.MAXIMUM={1}\:  O limite m\u00E1ximo de ''{0}'' foi excedido
javax.faces.validator.LongRangeValidator.MINIMUM={1}\:  Valor inferior ao limite m\u00EDnimo ''{0}''.
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}: Valores permitidos entre {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: O valor não é do tipo correto.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET=A expressão regular tem se ser definida.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail=O valor da expressão regular não pode estar vazio.
javax.faces.validator.RegexValidator.NOT_MATCHED=A express\u00E3o regular n\u00E3o encontrou nenhuma correspond\u00EAncia
javax.faces.validator.RegexValidator.NOT_MATCHED_detail=A express\u00E3o regular ''{0}'' n\u00E3o encontrou nenhuma correspond\u00EAncia
javax.faces.validator.RegexValidator.MATCH_EXCEPTION=Erro na expressão regular.
javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail=Erro na expressão regular, ''{0}''
javax.faces.validator.BeanValidator.MESSAGE={0}
